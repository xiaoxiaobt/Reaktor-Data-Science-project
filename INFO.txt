Date: 23.09.2019, Taige
The current platform is called Dash. It is an interactive Python framework for building web interface. 
It supports plots generated by Plotly, therefore I tried this and got some intermediate results.
The platform uses React (I don't know it much), see FAQ session of documentation.


Project Structure:
File				Input									Output									Usage
add_id.py			*2016.json								idchanged.json							Add 'id' property in original geojson file. Otherwise no plot available.
dataframe_edit.py	paavo_9_koko.csv						paavo_9_koko.tsv, paavo_9_kokoT.csv		Convert coding, remove "..", modify dataframe, save to TAB seperated values
find_neighbors.py	*2016.json								neighbours.csv							Find neighbour postal codes of polygons. Used in QGIS software
web_viewer.py		paavo_9_koko.tsv, idchanged.json,*.css	None(Website)							Visualize Data (Important)
example.py			*fips.json, indicators.csv, *.css		None(Website)							The example website in "Time-series plotting"										
*fips.json			/										/										Example file in Time-series
idchanged.json		/										/										Geojson of Finland
*2016.json			/										/										Original geojson of Finland
*2016.shp			/										/										Shape file of Finland
template.css		/										/										CSS template for both exmaple and our website
indicators.csv		/										/										Example	file in Time-series
neighbours.csv		/										/										Contains neighbours of postal codes
paavo_9_koko.csv	/										/										Original data
paavo_9_koko.tsv	/										/										Processed data, tab seperated values, .tsv
paavo_9_kokoT.csv	/										/										Processed data, tab seperated values, .csv
postal_code_list.csv/										/										Conatins postal codes


Required libraries:
pip install geopandas, pandas, numpy, json, dash, dash-daq, pprint


Checklist:
Description						Website														Description
Dash quickstart (part. 1-5)		https://dash.plot.ly/										Must read
Method for plotting				https://plot.ly/python/mapbox-county-choropleth/			Current method for plotting, Python, non-token version
Alternative method of plotting	https://plot.ly/python/choropleth-maps/						Alternative method for plotting
Time-series plotting			https://dash.plot.ly/interactive-graphing                   The part "Update Graphs on Hover"


Known issues:
Slow loading time := Now it loads 3000+ polygons, which now takes ~15s to load and ~7s to refresh
Mapbox Choropleth instead of figure := In Dash, parameter should be given as a figure. I passed a Choropleth instead, tried to speed up but no difference


Additional info:
/


TODOs:
Task										How
Add functions for plotting time-series		
Add interfaces for time-series anaylsis		
Add time series plot						See "Time-series plotting" in Checklist
Add more callbacks							See documetation
Add more hover data							(I have some ideas, but no time for it)
Optimized the loading speed for polygons	IDK


Optional (I mean, really optional):
Task							Purpose
Add customized .css				Make website look better
Ask for a server(maybe haha?)	Make the website actually accessible (Out of the scope of this course, but should be cool)


Tried:
Method	Status		Purpose									Result
QGIS	Success		Get neighbour zip codes from geometry	Attached and combined in the dataframe
time()	Failed		Measure the loading time				Cannot time the exact time for refresh
numba	Failed		Accelerate the loading					Does not support the data structure in go object
